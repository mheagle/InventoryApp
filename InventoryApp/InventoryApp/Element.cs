using System;
using System.Collections.Generic;
using System.Text;

namespace Inventoryapp

{
    enum LocationID
    {
        Stock,
        Retailer,
        Sold
    }
    #region Properties

    /// <summary>
    /// This is an inventory application where the user can create and price inventory, add labor charges
    /// and track location of stock
    /// </summary>

    class Element
    {
        private static int lastInventoryNumber = 0;

        /// <summary>
        /// Description of item
        /// </summary>
        public string Description { get; set; }

        /// <summary>
        /// Autogenerated inventory number for the account
        /// </summary>
        public int InventoryNumber { get; }

        /// <summary>
        /// Location of item
        /// </summary>
        public LocationID Location { get; set; }

        /// <summary>
        /// Wholesale Price of item
        /// </summary>
        public decimal Wholesale { get; set; }

        /// <summary>
        /// Retail Price of item
        /// </summary>
        public decimal Retail { get; private set; }

        /// <summary>
        /// Amount of time spent on fabrication
        /// </summary>
        public decimal Worktime { get; set; }

        /// <summary>
        /// Labor 
        /// </summary>
        public decimal Labor { get; private set; }

        /// <summary>
        /// Date item was added to inventory
        /// </summary>
        public DateTime DateAcquired { get; private set; }
        #endregion

        #region Constructor
        public Element()
        {
            InventoryNumber = ++lastInventoryNumber;
            DateAcquired = DateTime.Now;
        }
        #endregion 

        #region Methods

        /// <summary>
        /// Calculate labor for keum boo
        /// </summary>
        /// <param name="worktime">amount of time spent on technique</param>
        public void KeumBooWork(decimal rate, decimal worktime)
        {
            Retail = rate * worktime;
        }

        /// <summary>
        /// Calculate labor for solder
        /// </summary>
        /// <param name="worktime">amount of time spent on soldering</param>
        public void SolderWork(decimal rate, decimal worktime)
        {
            Retail = rate * worktime;
        }

        /// <summary>
        /// Calculate labor for ColdWork
        /// </summary>
        /// <param name="worktime">amount of time spent on cold working</param>
        public void ColdWork(decimal rate, decimal worktime)
        {
            Retail = rate * worktime;
        }

        /// <summary>
        /// Calculate retail price with user input values for markup and wholesale price
        /// </summary>
        /// <param name="markup">Price markup for retail</param>
        /// <param name="wsprice">Wholesale price</param>
        public void MakeRetail(decimal markup, decimal wsprice)

        {
            Retail = markup * wsprice;
        }


        /// <summary>
        /// Calculate retail price of item
        /// </summary>
        /// <param name="amount">labor charges</param>
        public void RetailPrice(decimal labor)
        {
            Retail += labor;
        }

        #endregion

    }
}
